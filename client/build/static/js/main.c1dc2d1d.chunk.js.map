{"version":3,"sources":["components/navbar.component.js","components/dreams-list.component.js","components/edit-dream.component.js","components/create-dream.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","to","Component","Dream","props","dream","date","substring","duration","username","description","aria-label","_id","href","onClick","deleteDream","DreamsList","bind","state","dreams","axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","this","filter","el","map","currentdream","key","className","Dreamslist","EditDream","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","user","e","target","value","preventDefault","post","window","location","ref","required","placeholder","onChange","rows","selected","dateFormat","type","CreateDream","length","CreateUser","newUser","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c1dc2d1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <div class = \"header-app\">\n      <div class = \"container\">  \n      <h1> <div class = \"row justify-content-center\">\n       <Link to=\"/\" > Dreams Catcher</Link>    \n       </div> </h1> \n       <h3>\n        <div class = \"row justify-content-center\">\n      <nav class=\"nav\" >\n      <Link to=\"/\"class=\"nav-item nav-link\" >entries</Link>  \n       <Link to=\"/create\"class=\"nav-item nav-link\" >create entry</Link>  \n       <Link to=\"/user\"class=\"nav-item nav-link\" >create author</Link>  \n    </nav> \n    </div>\n    </h3> \n    </div>\n    </div>\n    );\n  }\n}","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Dream = props => (\n  <div class = \"container\" >\n    <div class=\"row justify-content-start\">\n    <p><em>\n    {props.dream.date.substring(0,10)}, {props.dream.duration}, {props.dream.username} \n    </em></p>\n      </div>\n      <div class=\"row justify-content-start\">\n      <p>\n    <div>{props.dream.description}</div>\n    </p>\n    </div>\n        <div class=\"row justify-content-center\">\n        <p>\n        <nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><Link to={\"/edit/\"+props.dream._id}>edit</Link></li>\n    <li class=\"breadcrumb-item\"> <a href=\"#\" onClick={() => { props.deleteDream(props.dream._id) }}>delete</a> </li>\n  </ol>\n</nav>\n</p>\n    </div>\n    </div>\n)\nexport default class DreamsList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteDream = this.deleteDream.bind(this);\n    this.state = {dreams: []};\n  }\n  componentDidMount() {\n    axios.get('/api/dreams/')\n     .then(response => {\n       this.setState({ dreams: response.data });\n     })\n     .catch((error) => {\n        console.log(error);\n     })\n  }\n  deleteDream(id) {\n    axios.delete('/api/dreams/'+id)\n      .then(res => console.log(res.data));\n    this.setState({\n      dreams: this.state.dreams.filter(el => el._id !== id)\n    })\n  }\n  dreamList() {\n    return this.state.dreams.map(currentdream => {\n      return <Dream dream={currentdream} deleteDream={this.deleteDream} key={currentdream._id}/>;\n    })\n  }\n  render() {\n    return (\n    <div className=\"container\">\n      {this.state.Dreamslist} \n</div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nexport default class EditDream extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      duration: 'dream',\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/api/dreams/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        })   \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('/api/users/')\n      .then(response => {\n        this.setState({ users: response.data.map(user => user.username) });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const dream = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date,\n    };\n\n    console.log(dream);\n\n    axios.post('/api/dreams/update/'+this.props.match.params.id, dream)\n      .then(res => console.log(res.data));\n    \n    window.location = '/';\n  }\n\n  render() {\n    \n    return (\n      <div className=\"col-12 col-lg-6 offset-lg-3\">\n        <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                placeholder=\"Type\"\n                value={this.state.duration}\n                onChange={this.onChangeDuration}>\n                <option value=\"dream\">dream</option>\n                <option value=\"film\">film</option>\n                <option value=\"book\">book</option>\n                <option value=\"idea\">idea</option>\n            </select>\n          </div>\n   \n          <div className=\"form-group\"> \n            <textarea\n                required\n                className=\"form-control\"\n                placeholder=\"Description\"\n                 rows=\"4\"\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                placeholder=\"author\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                  this.state.users.map(function(user) {\n                    return <option \n                      key={user}\n                      value={user}>{user}\n                      </option>;\n                  })\n                }\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n                dateFormat=\"MMMM d, yyyy\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"submit\" className=\"btn btn-primary float-right\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\n\nexport default class CreateDream extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      duration: 'dream',\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/api/users/')\n    .then(response => {\n      if (response.data.length > 0) {\n        this.setState({ \n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  \n    const dream = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date,\n    };\n  \n    console.log(dream);\n    axios.post('/api/dreams/add', dream)\n  .then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    \n    return (\n      <div className=\"col-12 col-lg-6 offset-lg-3\">\n        <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                placeholder=\"Type\"\n                value={this.state.duration}\n                onChange={this.onChangeDuration}>\n                <option value=\"dream\">dream</option>\n                <option value=\"film\">film</option>\n                <option value=\"book\">book</option>\n                <option value=\"idea\">idea</option>\n            </select>\n          </div>\n   \n          <div className=\"form-group\"> \n            <textarea\n                required\n                className=\"form-control\"\n                placeholder=\"description\"\n                 rows=\"4\"\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                placeholder=\"author\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                  this.state.users.map(function(user) {\n                    return <option \n                      key={user}\n                      value={user}>{user}\n                      </option>;\n                  })\n                }\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <div>\n              <DatePicker\n                dateFormat=\"MMMM d, yyyy\"\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n                \n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"submit\" className=\"btn btn-primary float-right\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateUser extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n          username: ''\n        };\n      }\n      onChangeUsername(e) {\n        this.setState({\n          username: e.target.value\n        });\n      }\n      onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n          username: this.state.username,\n        };\n        console.log(newUser);\n        axios.post('/api/users/add', newUser)\n  .then(res => console.log(res.data));\n        this.setState({\n          username: ''\n        })\n      }\n  render() {\n    return (\n      <div className=\"col-12 col-lg-6 offset-lg-3\">\n      \n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                placeholder=\"name\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"submit\" className=\"btn btn-primary float-right\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/navbar.component\"\nimport DreamsList from \"./components/dreams-list.component\";\nimport EditDream from \"./components/edit-dream.component\";\nimport CreateDream from \"./components/create-dream.component\";\nimport CreateUser from \"./components/create-user.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br/>\n        <Route path=\"/\" exact component={DreamsList} />\n        <Route path=\"/edit/:id\" component={EditDream} />\n        <Route path=\"/create\" component={CreateDream} />\n        <Route path=\"/user\" component={CreateUser} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}